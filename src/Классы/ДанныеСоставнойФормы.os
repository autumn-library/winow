
Перем ДанныеФормы;

Процедура ПриСозданииОбъекта()
	ДанныеФормы = Новый Массив();
КонецПроцедуры

Функция Количество() Экспорт
	Возврат ДанныеФормы.Количество();
КонецФункции

Процедура Добавить(Значение) Экспорт
	ДанныеФормы.Добавить(Значение);
КонецПроцедуры

Функция ПолучитьПоИндексу(Индекс) Экспорт
	Возврат ДанныеФормы[Индекс];
КонецФункции

Функция НайтиДанныеПоМетаданным(Отбор) Экспорт

	Если Отбор.Количество() = 0 Тогда
		ВызватьИсключение "Отбор не может быть пустым";
	КонецЕсли;

	Для каждого ЗначениеФормы Из ДанныеФормы Цикл
		Если МетаданныеСоответствуютОтбору(ЗначениеФормы.Метаданные, Отбор) Тогда
			Возврат ЗначениеФормы;
		КонецЕсли;	
	КонецЦикла;

	Возврат Неопределено;
	
КонецФункции

Функция НайтиЗначениеПоМетаданным(Отбор) Экспорт

	Результат = НайтиДанныеПоМетаданным(Отбор);

	Если Результат = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Значение;
	КонецЕсли;
	
КонецФункции

Функция НайтиЗначениеСтрокойПоМетаданным(Отбор) Экспорт

	Результат = НайтиДанныеПоМетаданным(Отбор);

	Если Результат = Неопределено 
			ИЛИ (НЕ Результат = Неопределено и Результат.Значение = Неопределено) Тогда
		Возврат Неопределено;
	Иначе
		Возврат ПолучитьСтрокуИзДвоичныхДанных(Результат.Значение);
	КонецЕсли;
	
КонецФункции

Функция МетаданныеСоответствуютОтбору(Метаданные, Отбор)

	Для Каждого ТекущийОтбор из Отбор Цикл
		ОтборНайден = Ложь;

		Для Каждого ТекущиеМетаданные из Метаданные Цикл
			Если СокрЛП(ТекущиеМетаданные.Значение[ТекущийОтбор.Ключ]) = СокрЛП(ТекущийОтбор.Значение) Тогда
				ОтборНайден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если НЕ ОтборНайден Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;

	Возврат Истина;
	
КонецФункции