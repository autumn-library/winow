Перем ДеревоМаршрутов;
Перем ПодпискиВебСокетов;

&Желудь
Процедура ПриСозданииОбъекта(&Пластилин Перечисления)

	ДеревоМаршрутов = Новый ДеревоЗначений();
	ДеревоМаршрутов.Колонки.Добавить("ТочкаМаршрута");
	ДеревоМаршрутов.Колонки.Добавить("Действие");
	ДеревоМаршрутов.Колонки.Добавить("ПолныйПуть");

	ПодпискиВебСокетов = Новый Соответствие();

	Для Каждого КиЗ из Перечисления.ВидыПодписокВебСокета Цикл
		ПодпискиВебСокетов.Вставить(КиЗ.Ключ, Новый Соответствие());
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьМаршрут(ПолныйПуть, Действие) Экспорт

	МассивТочек = МассивТочекИзПути(ПолныйПуть);

	СтрокиМаршрута = ДеревоМаршрутов.Строки;

	Для Каждого ТекТочка Из МассивТочек Цикл
		СтрокаМаршрута = НайтиИлиСоздатьСтрокуВСтроках(СтрокиМаршрута, ТекТочка);
		СтрокиМаршрута = СтрокаМаршрута.Строки;
	КонецЦикла;

	СтрокаМаршрута.Действие = Действие;
	СтрокаМаршрута.ПолныйПуть = ПолныйПуть;

КонецПроцедуры

Процедура ДобавитьПодписку(ВидПодписки, Топик, Объект, Метод, Параметры) Экспорт
	ПодпискиВебСокетов[ВидПодписки].Вставить(Топик, 
						Новый Структура("Объект, Метод, Параметры", Объект, Метод, Параметры));
КонецПроцедуры

Функция ПолучитьПодписки(ВидПодписки) Экспорт
	Возврат ПодпискиВебСокетов[ВидПодписки];
КонецФункции

Функция НайтиИлиСоздатьСтрокуВСтроках(Строки, ТочкаМаршрута)

	ИскомаяСтрока = Строки.Найти(ТочкаМаршрута, "ТочкаМаршрута");

	Если ИскомаяСтрока = Неопределено Тогда
		НоваяСтрока = Строки.Добавить();
		НоваяСтрока.ТочкаМаршрута = ТочкаМаршрута;
		Возврат НоваяСтрока;
	Иначе
		Возврат ИскомаяСтрока;
	КонецЕсли;
	
КонецФункции

Функция МассивТочекИзПути(ПолныйПуть)

	Массив = Новый Массив();
	Массив.Добавить("/");
	Для Каждого ТекТочка из СтрРазделить(ПолныйПуть, "/", Ложь) Цикл
		Массив.Добавить(ТекТочка);
	КонецЦикла;

	Возврат Массив;

КонецФункции

Функция НайтиОбработчикИПараметрыПоПолномуПути(ПолныйПуть) Экспорт

	Структура = Новый Структура("Действие, Параметры", Неопределено, Новый Массив());

	ТочкиМаршрута = МассивТочекИзПути(ПолныйПуть);

	СтрокиМаршрута = ДеревоМаршрутов.Строки;

	СчетчикПути = 0;

	ИскомоеДействие = НайтиОбработчикРекурсивно(СтрокиМаршрута, ТочкиМаршрута, СчетчикПути);

	Если СчетчикПути = 0 И ТочкиМаршрута.Количество() > 1 Тогда
		Возврат Структура;
	КонецЕсли;

	Структура.Действие = ИскомоеДействие;

	Для Сч = СчетчикПути + 1 По ТочкиМаршрута.ВГраница() Цикл
		Структура.Параметры.Добавить(ТочкиМаршрута[Сч]);
	КонецЦикла;

	Возврат Структура;
	
КонецФункции

Функция НайтиОбработчикРекурсивно(Строки, ТочкиМаршрута, СчетчикПути)

	Если СчетчикПути >= ТочкиМаршрута.Количество() Тогда
		Возврат Неопределено;
	КонецЕсли;

	ТекущаяТочка = ТочкиМаршрута[СчетчикПути];

	НайденнаяСтрока = Строки.Найти(ТекущаяТочка, "ТочкаМаршрута");

	Если НайденнаяСтрока = Неопределено Тогда
		НайденнаяСтрока = Строки.Найти(СимволПараметраТочкиМаршрута(), "ТочкаМаршрута");
	КонецЕсли;

	Если НайденнаяСтрока = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	ДействиеНаЭтомУровне = Неопределено;
	СчетчикПутиНаЭтомУромне = СчетчикПути;

	Если ЗначениеЗаполнено(НайденнаяСтрока.Действие) Тогда
		ДействиеНаЭтомУровне = НайденнаяСтрока.Действие;
	КонецЕсли;

	Если НЕ НайденнаяСтрока.Строки.Количество() = 0 Тогда

		СчетчикПути = СчетчикПути + 1;
		ДействиеНаСледующемУровне = НайтиОбработчикРекурсивно(НайденнаяСтрока.Строки, ТочкиМаршрута, СчетчикПути);

		Если Не ДействиеНаСледующемУровне = Неопределено Тогда
			ДействиеНаЭтомУровне = ДействиеНаСледующемУровне;
		Иначе
			СчетчикПути = СчетчикПутиНаЭтомУромне;
		КонецЕсли;

	КонецЕсли;

	Возврат ДействиеНаЭтомУровне;

КонецФункции

Функция СимволПараметраТочкиМаршрута() Экспорт
	Возврат "%*anyparam*%";
КонецФункции

Функция ОписаниеТочкиМаршрута() Экспорт

	Действие = Новый Структура("УрлСодержитШаблон, АдресКонтроллера, Желудь, ИмяМетода, Параметры, ПараметрыОписание, ПараметрыУРЛ, Шаблон, МетодШаблона, ПараметрыШаблона, ВыводитьШаблонКонтрола"
								, Ложь, "");
	Возврат Действие;

КонецФункции