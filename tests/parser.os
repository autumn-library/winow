#Использовать autumn
#Использовать ".."
#Использовать asserts

Функция ТестовыеДД()
	Возврат Новый ДвоичныеДанные("tests/features/multipart-form-data");
КонецФункции

&Тест
Процедура РазбиениеДДВМассивПростой() Экспорт
	
	// Дано
	Поделка = Новый Поделка();
	Поделка.ПросканироватьКаталог("tests/mock/");
	Поделка.ЗапуститьПриложение();
	Парсеры = Поделка.НайтиЖелудь("Парсеры");

	ДанныеФормыДД = ТестовыеДД();

	// Когда
	Результат = Парсеры.РазделитьДвоичныеДанныеРазделителемВМассив(ДанныеФормыДД, ПолучитьДвоичныеДанныеИзСтроки("---------------------------186955378527859643922779568670"));

	//Тогда 
	Ожидаем.Что(Результат).ИмеетТип("Массив");
	Ожидаем.Что(Результат.Количество()).Равно(5);
	Ожидаем.Что(Результат[1]).Равно(ПолучитьДвоичныеДанныеИзСтроки(Символы.ВК + Символы.ПС + "Content-Disposition: form-data; name=""name""" + Символы.ВК + Символы.ПС + Символы.ВК + Символы.ПС + "nonamed" + Символы.ВК + Символы.ПС + "--"));
	Ожидаем.Что(ПолучитьСтрокуИзДвоичныхДанных(Результат[2])).Равно(Символы.ВК + Символы.ПС + "Content-Disposition: form-data; name=""age""" + Символы.ВК + Символы.ПС + Символы.ВК + Символы.ПС + "2023-09-13" + Символы.ВК + Символы.ПС + "--");
	Ожидаем.Что((ПолучитьСтрокуИзДвоичныхДанных(Результат[0]))).Равно("--");
	Ожидаем.Что((ПолучитьСтрокуИзДвоичныхДанных(Результат[4]))).Равно("--" + Символы.ВК + Символы.ПС);

КонецПроцедуры

&Тест
Процедура ПолучениеДанныхФормы() Экспорт

	// Дано
	Поделка = Новый Поделка();
	Поделка.ПросканироватьКаталог("tests/mock/");
	Поделка.ЗапуститьПриложение();
	Парсеры = Поделка.НайтиЖелудь("Парсеры");
	ВходящийЗапрос = Поделка.НайтиЖелудь("ВходящийЗапрос");

	ВходящийЗапрос.ТелоДвоичныеДанные = ТестовыеДД();
	ВходящийЗапрос.Заголовки.Вставить("Content-Type", "multipart/form-data; boundary=---------------------------186955378527859643922779568670");

	// Когда
	ДанныеФормы = ВходящийЗапрос.ЗначенияПараметровДляТочкиМаршрута().ДанныеФормы;

	РабочийОтбор = Новый Соответствие();
	РабочийОтбор.Вставить("name", "name");

	НеРабочийОтбор = Новый Соответствие();
	НеРабочийОтбор.Вставить("name", "unexist");

	// Тогда
	Ожидаем.Что(ДанныеФормы).ИмеетТип("ДанныеСоставнойФормы");
	Ожидаем.Что(ДанныеФормы.Количество()).Равно(3);

	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(0)).ИмеетТип("Структура");
	Ожидаем.Что(ПолучитьСтрокуИзДвоичныхДанных(ДанныеФормы.ПолучитьПоИндексу(0).Значение)).Равно("nonamed");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(0).Метаданные).ИмеетТип("Соответствие");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(0).Метаданные["Content-Disposition"]).ИмеетТип("Соответствие");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(0).Метаданные["Content-Disposition"].Количество()).Равно(2);
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(0).Метаданные["Content-Disposition"]["name"]).Равно("name");
		
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(1)).ИмеетТип("Структура");
	Ожидаем.Что(ПолучитьСтрокуИзДвоичныхДанных(ДанныеФормы.ПолучитьПоИндексу(1).Значение)).Равно("2023-09-13");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(1).Метаданные).ИмеетТип("Соответствие");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(1).Метаданные["Content-Disposition"]).ИмеетТип("Соответствие");
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(1).Метаданные["Content-Disposition"].Количество()).Равно(2);
	Ожидаем.Что(ДанныеФормы.ПолучитьПоИндексу(1).Метаданные["Content-Disposition"]["name"]).Равно("age");

	Ожидаем.Что(ДанныеФормы.НайтиЗначениеСтрокойПоМетаданным(РабочийОтбор)).Равно("nonamed");
	Ожидаем.Что(ДанныеФормы.НайтиЗначениеПоМетаданным(РабочийОтбор)).Равно(ПолучитьДвоичныеДанныеИзСтроки("nonamed"));
	Ожидаем.Что(ДанныеФормы.НайтиДанныеПоМетаданным(НеРабочийОтбор)).Равно(Неопределено);

	Ожидаем.Что(ДанныеФормы.НайтиЗначениеПоМетаданным(Новый Структура("name", "file"))).Равно(Новый ДвоичныеДанные("tests/features/img.jpg"));

КонецПроцедуры